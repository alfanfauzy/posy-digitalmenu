stages:
  - test
  - build
  - quality-code
  - build-image
  - deploy

include:
  - project: 'devops/gitlab-ci-templates'
    file: 'k8s-docker-runner.yml'

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ~/.yarn
    - ~/.cache/yarn
    - node_modules

variables: &build_variables
  DOCKER_REGISTRY: registry.infra.pvg.im
  DOCKERFILE: Dockerfile
  DOCKER_BUILD_CONTEXT: .
  DOCKER_BUILD_OPTS: ''
  DOCKER_BUILDKIT: 1
  NAMESPACE: $CI_PROJECT_NAMESPACE
  PROJECT_NAME: $CI_PROJECT_NAME
  NEXT_PUBLIC_API: $NEXT_PUBLIC_API
  NEXT_APP_NAME: $NEXT_APP_NAME
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA

test:
  stage: test
  image: node:18-alpine
  extends: .k8s_docker_runner
  tags: ['pvg']
  except:
    - tags
  before_script:
    - yarn install --frozen-lockfile
    - yarn config set cache-folder ~/.cache/yarn
  script:
    - yarn test:ci
    - yarn test:coverage
  artifacts:
    paths:
      - coverage

build:
  stage: build
  image: node:18-alpine
  extends: .k8s_docker_runner
  tags: ['pvg']
  except:
    - tags
  before_script:
    - yarn install --frozen-lockfile
    - yarn config set cache-folder ~/.cache/yarn
  script:
    - yarn build
  artifacts:
    paths:
      - .next/

quality-code:
  stage: quality-code
  image: node:18-alpine
  extends: .k8s_docker_runner
  tags: ['pvg']
  except:
    - tags
  before_script:
    - yarn install --frozen-lockfile
    - yarn config set cache-folder ~/.cache/yarn
  script:
    - yarn check:prettier
    - yarn check:lint
    - yarn check:ts

build_image:
  stage: build-image
  extends: .k8s_docker_runner
  tags: ['pvg']
  only:
    - master
    - development
  variables:
    <<: *build_variables
  before_script:
    - apk add --update nodejs npm
    - npm install -g yarn
  script:
    - export NEXT_PUBLIC_API=$NEXT_PUBLIC_API
    - export NEXT_PUBLIC_GA_ID='G-F5TB2RTKQ9'
    - |
      if [ "$CI_COMMIT_BRANCH" != master ]; then
        export IMAGE_TAG=dev-$CI_COMMIT_SHORT_SHA
      fi
    - |
      docker build --progress=plain \
        --build-arg GIT_REPO="$CI_PROJECT_URL" \
        --build-arg GIT_COMMIT="$IMAGE_TAG" \
        --build-arg GIT_DATE="$CI_COMMIT_TIMESTAMP" \
        --build-arg IMG_NAME="$DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME" \
        --build-arg NEXT_APP_NAME="$NEXT_APP_NAME" \
        --build-arg NEXT_PUBLIC_API="$NEXT_PUBLIC_API" \
        --build-arg NEXT_PUBLIC_GA_ID='G-F5TB2RTKQ9' \
        $DOCKER_BUILD_OPTS \
        -t $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:$IMAGE_TAG \
        -t $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:latest \
        -f ./$DOCKER_FILE $DOCKER_BUILD_CONTEXT
    - docker push $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:$IMAGE_TAG
    - docker push $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:latest
    - |
      echo -e "\e[1;93mDocker image: " $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:$IMAGE_TAG

deploy_to_stage:
  stage: deploy
  extends: .deploy_to_docker
  tags: ['pvg']
  only:
    - master
  variables:
    DOCKER_HOST: posy-fnb01.int.stage.pvg.im
    APP_IMAGE_TAG: $CI_COMMIT_SHORT_SHA
    APP_PORT: 3000
    HOST_PORT: 3004

build_image_tagged:
  stage: build-image
  extends: .k8s_docker_runner
  tags: ['pvg']
  only:
    - tags
  variables:
    <<: *build_variables
  before_script:
    - apk add --update nodejs npm
    - npm install -g yarn
  script:
    - export NEXT_PUBLIC_API=$NEXT_PUBLIC_API_PROD
    - export NEXT_PUBLIC_GA_ID='G-2KKCW58Z87'
    - |
      docker build --progress=plain \
        --build-arg GIT_REPO="$CI_PROJECT_URL" \
        --build-arg GIT_COMMIT="$IMAGE_TAG" \
        --build-arg GIT_DATE="$CI_COMMIT_TIMESTAMP" \
        --build-arg IMG_NAME="$DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME" \
        --build-arg NEXT_APP_NAME="$NEXT_APP_NAME" \
        --build-arg NEXT_PUBLIC_API="$NEXT_PUBLIC_API" \
        --build-arg NEXT_PUBLIC_GA_ID='G-2KKCW58Z87' \
        $DOCKER_BUILD_OPTS \
        -t $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:$IMAGE_TAG \
        -t $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:latest \
        -f ./$DOCKER_FILE $DOCKER_BUILD_CONTEXT
    - |
      docker image tag $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:latest \
      $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:$CI_COMMIT_TAG
    - docker push $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:latest
    - |
      docker push $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:$CI_COMMIT_TAG
    - |
      echo -e "\e[1;93mDocker image: " $DOCKER_REGISTRY/$NAMESPACE/$PROJECT_NAME:$CI_COMMIT_TAG
